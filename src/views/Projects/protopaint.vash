@html.extend('/Shared/_layout', function(model){

    @html.block('content', function(model){

        <link rel="stylesheet" href="/css/projects/protopaint/protopaint.css"/>
        <link rel="stylesheet" href="/css/resize.css"/>
        <link rel="stylesheet" href="/css/actionsearch.css"/>

        @{
            model.title = "ProtoPaint";
        }

        <div id="protoContainer">

            <div class="header">

                <div id="left">
                    <span id="title">ProtoPaint <i class="fas fa-paint-brush"></i></span>
                </div>

                <div id="right">
                    <a href="/projects/index">Back to Thatonespot</a>
                </div>

            </div>

            <div id="protoBackdrop">

                <canvas id="protoCanvas" width="700" height="700"></canvas>

                <!-- Mouse Interaction layer-->
                <div id="interaction-layer"></div>

                <!-- Left Panel-->
                <div data-panel="left" data-resize="right">

                    <div class="scrolly">
                        <h2>ProtoPaint</h2>
                        <p>Started: March 26, 2020</p>

                        <p>Advanced paint application built with javascript. Extensibility and maintainability are the main goals with some ambitious features planned. </p>

                        <h4>Things TODO</h4>
                        <ul style="list-style: none; margin: 0; padding: 0">

                          <li>
                                <h6>File Menu</h6>
                                <ol>
                                    <li>
                                        <input type="checkbox">
                                        Builds upon variation binding. 
                                    </li>
                                    <li>
                                        <input type="checkbox">
                                        Displays key combo if applicable
                                    </li> 
                                    <li>
                                        <input type="checkbox">
                                        Can use an observable list for options
                                    </li>
                                     <li>
                                        <input type="checkbox">
                                        Can use observable contraints for denying clickability
                                    </li>
                                     <li>
                                        <input type="checkbox">
                                        If command requires input then it opens dynamicaly generated form for entering flags
                                    </li>
                                </ol>
                            </li>

                             <li>
                                <h6>Action Search</h6>
                                <ol>
                                    <li>
                                        <input type="checkbox" checked>
                                        Fix flags so they display grouped together
                                    </li>
                                    <li>
                                        <input type="checkbox" checked>
                                        When using the autocomplete on the flag add the "=" instead of a space
                                    </li>
                                    <li>
                                        <input type="checkbox">
                                        Commands can use autocomplete for selecting flag option values
                                    </li>
                                </ol>
                            </li>

                             <li>
                                <h6>Footer Menu</h6>
                                <ol>
                                    <li>
                                        <input type="checkbox" checked>
                                        Group all footer declarations into 1 file. (So its easy to find and update them)
                                    </li>
                                    <li>
                                        <input type="checkbox" checked>
                                        Hook into the action search to display the options for each menu action when needed
                                    </li>
                                </ol>
                            </li>

                              <li>
                                <h6>Action Commands</h6>
                                <ol>
                                    <li>
                                        <input type="checkbox" checked>
                                        Fix fullscreen command. Make typescript be happy with the function calls.
                                    </li>
                                    <li>
                                        <input type="checkbox">
                                        Create help controller
                                    </li>
                                    <li>
                                        <input type="checkbox">
                                        Create Edit controller
                                    </li>
                                </ol>
                            </li>

                             <li>
                                <h6>Help Commands</h6>
                                <ol>
                                    <li>
                                        <input type="checkbox">
                                        Display/Remap Keyboard Commands
                                    </li>
                                    <li>
                                        <input type="checkbox">
                                        Explain actionsearch controls
                                    </li>
                                </ol>
                            </li>

                             <li>
                                <h6>Edit controller</h6>
                                <ol>
                                    <li>
                                        <input type="checkbox">
                                        Create new shape
                                    </li>
                                    <li>
                                        <input type="checkbox">
                                        Move virtual cursor
                                    </li>
                                    <li>
                                        <input type="checkbox">
                                        Change layer
                                    </li>
                                </ol>
                            </li>
                        </ul>
<!--
                            <li>
                                <h6>Topic 1</h6>
                                <ol>
                                    <li>
                                        <input type="checkbox">
                                        Item 1
                                    </li>
                                    <li>
                                        <input type="checkbox">
                                        Item 2
                                    </li>
                                </ol>
                            </li>
                            -->
                    </div>
                </div>
                
                <!-- Right Panel-->
                <div data-panel="right" data-resize="left">
                    <h4>My library notes</h4>
                    <ol>
                        <li>
                            <h5>KeyCommander.js</h5>
                            <p>Small library that makes binding key combinations(not sequences) super easy. Used for all keyboard input in this app and for the time being is mostly complete. In due time I will be making a npm package for this</p>
                        </li>
                        <li>
                            <h5>ActionCommander.js</h5>
                            <p>A library to make it easy to create cli like commands that can be bound to keybindings or forms be built for them automatically to fill in values. This library is still very incomplete. Missing features include autocomplete, command history visualization, and scripting support. I may also make this a npm package as long as it does not end up depending on this project.</p>
                        </li>
                        <li>
                            <h5>Resize.js</h5>
                            <p>
                                Used to allow these panels to be resized simply by adding a data tag and indicating the side to be able to be resized. Will make a npm package in the future. Functionaly complete.
                            </p>
                        </li>
                    </ol>
                </div>

                <div class="footer">
                    <div id="left"></div>
                    <div id="right"></div>
                </div>

                <!-- Search -->
                <div id="search-container" data-panel="search" data-search="true"></div>

            </div>
        </div>
        
        <script type="module" src="/javascript/projects/protopaint/index.js"></script>
        <script type="module" src="/javascript/util/resize.js"></script>
    })
})